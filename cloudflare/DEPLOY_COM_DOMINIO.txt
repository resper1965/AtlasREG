================================================================================
           ATLASREG - DEPLOY COM DOM√çNIO atlasREG.ness.tec.br
                    Configura√ß√£o Completa
================================================================================

Data: 20 de Outubro de 2025
Dom√≠nio: atlasREG.ness.tec.br
Status: ‚úì Senhas geradas | ‚òê DNS a criar | ‚òê Workers a deployar

================================================================================
SENHAS GERADAS (SEGURAS)
================================================================================

‚úì API_SECRET:         zUI12gR2TWnTFTFXKYcdv2ZbsH0Rc3Ot6f2RW2AxTgHoO6U1
‚úì HMAC_SECRET:        XDIKBYjsAlhVNn0VdsMn53Wwqrrl43cEXKSrLgu2juLjdaShjQpGEF9u6F63TCKG
‚úì ORCHESTRATOR_SECRET: LWZCyImxj32Llfs0ZgyKTuBJPe5RyamRoGRqvolEtjX6WdySKelJsalMeEGU1Al9

‚ö†Ô∏è  Arquivo completo em: cloudflare/SENHAS_GERADAS.txt

================================================================================
PASSO 1: CRIAR DNS NA CLOUDFLARE
================================================================================

OP√á√ÉO A: Script Autom√°tico (Recomendado)
-----------------------------------------
./cloudflare/DNS_AUTOMATION.sh

O script vai criar automaticamente:
  ‚úì atlasREG.ness.tec.br ‚Üí atlasreg-frontend.pages.dev
  ‚úì api.atlasREG.ness.tec.br ‚Üí atlasreg-api-gateway.workers.dev
  ‚úì trigger.atlasREG.ness.tec.br ‚Üí atlasreg-trigger-ingest.workers.dev
  ‚úì webhook.atlasREG.ness.tec.br ‚Üí atlasreg-webhook-receiver.workers.dev
  ‚úì vps.atlasREG.ness.tec.br ‚Üí SEU_IP_VPS

OP√á√ÉO B: Dashboard Manual
--------------------------
1. Acesse: https://dash.cloudflare.com/
2. Selecione: ness.tec.br
3. DNS ‚Üí Records ‚Üí Add record
4. Criar conforme arquivo: DNS_CLOUDFLARE_CONFIG.txt

================================================================================
PASSO 2: CRIAR RECURSOS CLOUDFLARE
================================================================================

wrangler login

# Queue
wrangler queues create atlasreg-ingest-queue

# KV
wrangler kv:namespace create "STATUS_KV"
# ANOTAR O ID QUE APARECER!

# R2
wrangler r2 bucket create atlasreg-gold

# Obter Account ID
wrangler whoami
# ANOTAR O Account ID!

================================================================================
PASSO 3: CONFIGURAR WORKERS
================================================================================

WORKER 1: api-gateway
---------------------
Editar: cloudflare/workers/api-gateway/wrangler.toml

name = "atlasreg-api-gateway"
main = "index.js"
compatibility_date = "2025-10-20"

[vars]
BACKEND_URL = "http://SEU_IP_VPS:8200"
# Ou: BACKEND_URL = "http://vps.atlasREG.ness.tec.br:8200"

[[routes]]
pattern = "api.atlasREG.ness.tec.br/*"
zone_name = "ness.tec.br"

WORKER 2: trigger-ingest
------------------------
Editar: cloudflare/workers/trigger-ingest/wrangler.toml

‚úì API_SECRET j√° configurado automaticamente!

Adicionar no final:

[[routes]]
pattern = "trigger.atlasREG.ness.tec.br/*"
zone_name = "ness.tec.br"

WORKER 3: webhook-receiver
--------------------------
Editar: cloudflare/workers/webhook-receiver/wrangler.toml

‚úì HMAC_SECRET j√° configurado automaticamente!

Atualizar:
id = "COLAR_KV_NAMESPACE_ID_AQUI"

Adicionar no final:

[[routes]]
pattern = "webhook.atlasREG.ness.tec.br/*"
zone_name = "ness.tec.br"

================================================================================
PASSO 4: DEPLOY WORKERS
================================================================================

cd /home/resper/nSaulo/cloudflare/workers

# Worker 1
cd api-gateway
wrangler deploy
cd ..

# Worker 2
cd trigger-ingest
wrangler deploy
cd ..

# Worker 3
cd webhook-receiver
wrangler deploy
cd ..

================================================================================
PASSO 5: CONFIGURAR ORCHESTRATOR
================================================================================

Editar: /home/resper/nSaulo/.env

Adicionar/atualizar no final:

# Cloudflare Mode
MODE=cloudflare

# Cloudflare API
CF_API_TOKEN=1a3ea7b7e9efa3fda819583eb47080c62c4e1
CF_ACCOUNT_ID=COLAR_ACCOUNT_ID_AQUI
CF_QUEUE_NAME=atlasreg-ingest-queue
CF_KV_NAMESPACE_ID=COLAR_KV_NAMESPACE_ID_AQUI

# Webhook
HOOK_ENDPOINT=https://webhook.atlasREG.ness.tec.br/hooks/ingest-complete
HOOK_HMAC_SECRET=XDIKBYjsAlhVNn0VdsMn53Wwqrrl43cEXKSrLgu2juLjdaShjQpGEF9u6F63TCKG

# R2 Storage (obter ap√≥s criar R2)
R2_ENDPOINT=https://ACCOUNT_ID.r2.cloudflarestorage.com
R2_ACCESS_KEY=GERAR_ACCESS_KEY
R2_SECRET_KEY=GERAR_SECRET_KEY
R2_BUCKET=atlasreg-gold

SALVAR E RESTART:

docker-compose restart orchestrator

================================================================================
PASSO 6: TESTAR
================================================================================

# Aguardar propaga√ß√£o DNS (5-30 min)
# Verificar DNS
dig atlasREG.ness.tec.br
dig api.atlasREG.ness.tec.br

# Health checks
curl https://api.atlasREG.ness.tec.br/health
curl https://trigger.atlasREG.ness.tec.br/health
curl https://webhook.atlasREG.ness.tec.br/health

# Trigger manual
curl -X POST https://trigger.atlasREG.ness.tec.br/trigger \
  -H "Authorization: Bearer zUI12gR2TWnTFTFXKYcdv2ZbsH0Rc3Ot6f2RW2AxTgHoO6U1" \
  -H "Content-Type: application/json" \
  -d '{
    "type": "start_daily_ingest",
    "date": "2025-10-20"
  }'

# Ver logs Orchestrator
docker logs -f atlasreg-orchestrator

================================================================================
PASSO 7: DEPLOY FRONTEND (Cloudflare Pages)
================================================================================

cd /home/resper/nSaulo/apps/web

# Build
npm run build

# Deploy
npx wrangler pages deploy .next --project-name=atlasreg-frontend

# Configurar dom√≠nio customizado
Cloudflare Dashboard ‚Üí Pages ‚Üí atlasreg-frontend ‚Üí Custom domains
Add custom domain: atlasREG.ness.tec.br

================================================================================
URLS FINAIS
================================================================================

‚úì Frontend:  https://atlasREG.ness.tec.br
‚úì API:       https://api.atlasREG.ness.tec.br
‚úì Trigger:   https://trigger.atlasREG.ness.tec.br
‚úì Webhook:   https://webhook.atlasREG.ness.tec.br
‚úì VPS:       https://vps.atlasREG.ness.tec.br

================================================================================
CHECKLIST COMPLETO
================================================================================

‚òê 1. Criar DNS (script ou manual)
‚òê 2. Criar Queue, KV, R2
‚òê 3. Configurar Workers (dom√≠nio + senhas)
‚òê 4. Deploy Workers
‚òê 5. Configurar Orchestrator (.env)
‚òê 6. Restart Orchestrator
‚òê 7. Testar health checks
‚òê 8. Trigger manual
‚òê 9. Deploy Frontend
‚òê 10. Configurar dom√≠nio customizado frontend

PRONTO! Sistema completo em https://atlasREG.ness.tec.br

================================================================================
ARQUIVOS DE REFER√äNCIA
================================================================================

cloudflare/SENHAS_GERADAS.txt          ‚Üí Credenciais seguras
cloudflare/DNS_CLOUDFLARE_CONFIG.txt   ‚Üí Detalhes DNS
cloudflare/DNS_AUTOMATION.sh           ‚Üí Script automa√ß√£o DNS
cloudflare/DEPLOY_COM_DOMINIO.txt      ‚Üí Este arquivo

================================================================================
CUSTO
================================================================================

üí∞ $0/m√™s (FREE TIER Cloudflare)

- Workers: 100k requests/dia
- Queue: 1M mensagens/m√™s
- KV: 100k reads/dia
- R2: 10GB storage
- Pages: Unlimited
- DNS: Gr√°tis
- SSL/TLS: Gr√°tis

================================================================================
TROUBLESHOOTING
================================================================================

DNS n√£o resolve:
‚Üí Aguardar propaga√ß√£o (5-30 min)
‚Üí Verificar em: https://dnschecker.org/

Worker 404:
‚Üí Verificar se rotas customizadas foram configuradas
‚Üí Re-deploy worker ap√≥s adicionar [[routes]]

502 Bad Gateway:
‚Üí Verificar se VPS est√° acess√≠vel
‚Üí Verificar BACKEND_URL no api-gateway

401 Unauthorized:
‚Üí Verificar API_SECRET no trigger
‚Üí Verificar HMAC_SECRET no webhook

Orchestrator n√£o consome:
‚Üí Verificar MODE=cloudflare no .env
‚Üí Verificar CF_API_TOKEN
‚Üí Ver logs: docker logs -f atlasreg-orchestrator

================================================================================
SEGURAN√áA
================================================================================

‚úì Senhas aleat√≥rias seguras (48-64 caracteres)
‚úì HMAC-SHA256 para webhooks
‚úì Bearer token authentication
‚úì SSL/TLS autom√°tico (Cloudflare)
‚úì Proxy Cloudflare (DDoS protection)

‚ö†Ô∏è  IMPORTANTE:
- N√£o commitar SENHAS_GERADAS.txt no git
- N√£o compartilhar credenciais
- Rotacionar senhas periodicamente

================================================================================
PR√ìXIMOS PASSOS (Opcional)
================================================================================

‚òê Configurar cron triggers
‚òê Habilitar rate limiting
‚òê Configurar Cloudflare Analytics
‚òê Adicionar custom domain SSL certificate
‚òê Configurar WAF rules
‚òê Setup monitoring/alerting
‚òê Configurar backup autom√°tico

================================================================================
Powered by: ness.
Dom√≠nio: atlasREG.ness.tec.br
Status: ‚úì Pronto para deploy!
================================================================================

